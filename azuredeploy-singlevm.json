{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "region of resources"
      }
    },
    "FW01MgmtAddress": {
      "type": "string"
    },
    "FW01PrivateIPAddressUntrust": {
      "type": "string"
    },
    "FW01PrivateIPAddressTrust": {
      "type": "string"
    },
    "newStorageAccount": {
      "type": "string",
      "metadata": {
        "description": "Globally unique lowercase name of your storage account"
      }
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "UntrustLBpublicIPAddressName": {
      "type": "string",
      "defaultValue": "myPublicIP",
      "metadata": {
        "description": "Public IP Name"
      }
    },
    "UntrustlbNameFrontEnd": {
      "type": "string",
      "defaultValue": "myLB",
      "metadata": {
        "description": "Load Balancer name"
      }
    },
    "TrustlbNameBackEnd": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the internal load balancer"
      }
    },
    "TrustlbsnetName": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the Virtual Network"
      }
    },
    "TrustlbsnetPrefix": {
      "type": "string",
      "metadata": {
        "description": "This is the IP address range of the internal load balancer subnet"
      }
    },
    "TrustlbFrontEndIPAddress": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the Virtual Network"
      }
    },
    "storageAccountNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "Description": "Indicates whether the Storage Account is new or existing"
      }
    },
    "existingStorageAccountRG": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Storage Resource Group of the Existing VM."
      }
    },
    "FWVM01Name": {
      "type": "string",
      "metadata": {
        "description": "Name of VM-Series VM01 in the Azure portal"
      }
    },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "Username for VM-Series administrator"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for VM-Series administrator"
      }
    },
    "authenticationType": {
      "type": "string",
      "metadata": {
        "descritpion": "Type of authentication "
      },
      "allowedValues": [
        "password"
      ],
      "defaultValue": "password"
    },
    
    "imageVersion": {
      "type": "string",
      "defaultValue": "latest",
      "allowedValues": [
        "7.1.1",
        "8.0.0",
        "latest"
      ],
      "metadata": {
        "description": "PAN-OS version."
      }
    },
    "imageSku": {
      "type": "string",
      "defaultValue": "byol",
      "allowedValues": [
        "byol",
        "bundle1",
        "bundle2"
      ],
      "metadata": {
        "description": "VM-Series model: BYOL or hourly pay-as-you-go (PAYG): Bundle 1 or Bundle 2"
      }
    },
    "vmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D5",
        "Standard_D5_v2",
        "Standard_A4"
      ],
      "metadata": {
        "description": "Azure VM size for VM-Series"
      }
    },
    "availabilitySetName": {
      "type": "string",
      "defaultValue": "VMSeriesFwAvSet",
      "metadata": {
        "description": "Azure Availability Set for VM-Series firewalls"
      }
    },
    "baseUrl": {
      "type": "string",
      "metadata": {
        "artifactsBaseUrl": ""
      },
      "defaultValue": "https://raw.githubusercontent.com/prabthind/paloaltoAS/master/"
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual network that the consumer wants to use"
      },
      "defaultValue": "panVnet"
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "192.168.0.0/16",
      "metadata": {
        "description": "Virtual network address CIDR"
      }
    },
    "subnet0Name": {
      "type": "string",
      "defaultValue": "Mgmt",
      "metadata": {
        "description": "Subnet for the Mgmt"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "Untrust",
      "metadata": {
        "description": "Subnet for the Untrust"
      }
    },
    "subnet2Name": {
      "type": "string",
      "defaultValue": "Trust",
      "metadata": {
        "description": "Subnet for the Trust"
      }
    },
    "subnet0Prefix": {
      "type": "string",
      "defaultValue": "192.168.0.0/24",
      "metadata": {
        "description": "Mgmt subnet CIDR"
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "192.168.1.0/24",
      "metadata": {
        "description": "Untrust subnet CIDR"
      }
    },
    "subnet2Prefix": {
      "type": "string",
      "defaultValue": "192.168.2.0/24",
      "metadata": {
        "description": "Trust subnet CIDR"
      }
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "imagePublisher": "paloaltonetworks",
    "imageOffer": "vmseries1",
    "BElbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('TrustlbNameBackEnd'))]",
    "TrustlbsubnetName": "[parameters('TrustlbsnetName')]",
    "TrustlbsubnetRef": "[concat(variables('vnetID'),'/subnets/',variables ('TrustlbsubnetName'))]",
    "TrustlbFrontEndIPAddress": "[parameters('TrustlbFrontEndIPAddress')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('UntrustlbNameFrontEnd'))]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/BackendPool1')]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('UntrustLBpublicIPAddressName'))]",
    "fwpublicIPNameVM01": "[concat(parameters('FWVM01Name'), '-UntrustPublic')]",
    "VM01nicName": "[concat(parameters('FWVM01Name'), '-eth')]",
    "FW01MgmtAddress": "[parameters('FW01MgmtAddress')]",
    "FW01PrivateIPAddressUntrust": "[parameters('FW01PrivateIPAddressUntrust')]",
    "FW01PrivateIPAddressTrust": "[parameters('FW01PrivateIPAddressTrust')]",
    "publicIPAddressType": "Static",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet0Name'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet2Name'))]",
    "storageAccountSetupURL": "[concat(parameters('baseUrl'),'/storageAccount-',parameters('storageAccountNewOrExisting'),'.json')]",
    "vmTemplateUrl": "[concat(parameters('baseUrl'), '/virtual-machine-password-singlevm.json')]"
  },
  "resources": [
    {
      "name": "storageAcountSetup1",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('storageAccountSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          },
          "newStorageAccount": {
            "value": "[parameters('newStorageAccount')]"
          },
          "storageAccountExistingRG": {
            "value": "[parameters('existingStorageAccountRG')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availabilitySetName')]",
      "location": "[resourceGroup().location]"
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('UntrustLBpublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
        
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('fwpublicIPNameVM01')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
       }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [

      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('virtualNetworkAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnet0Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet0Prefix')]"

            }
          },
          {
            "name": "[parameters('subnet1Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet1Prefix')]"
            }
          },
          {
            "name": "[parameters('subnet2Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet2Prefix')]"
            }
          },
          {
            "name": "[parameters('TrustlbsnetName')]",
            "properties": {
              "addressPrefix": "[parameters('TrustlbsnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('VM01nicName'), '0')]",
      "location": "[parameters('location')]",
      "dependsOn": [

        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "tags": {
        "displayName": "[concat('NetworkInterfaces', '0')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat('ipconfig', '0')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('FW01MgmtAddress')]",
              "subnet": {
                "id": "[variables(concat('subnet','0','Ref'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('VM01nicName'), '1')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('fwpublicIPNameVM01'))]",
        "[resourceId('Microsoft.Network/loadBalancers', parameters('UntrustlbNameFrontEnd'))]"
      ],
      "tags": {
        "displayName": "[concat('NetworkInterfaces', '1')]"
      },
      "properties": {
        "enableIPForwarding": true,
        "ipConfigurations": [
          {
            "name": "[concat('ipconfig', '1')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('FW01PrivateIPAddressUntrust')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('fwpublicIPNameVM01'))]"
              },
              "subnet": {
                "id": "[variables(concat('subnet','1','Ref'))]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('UntrustlbNameFrontEnd')), '/backendAddressPools/', parameters('UntrustlbNameFrontEnd'), '-pool')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('VM01nicName'), '2')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', parameters('TrustlbNameBackEnd'))]"
      ],
      "tags": {
        "displayName": "[concat('NetworkInterfaces', '2')]"
      },
      "properties": {
        "enableIPForwarding": true,
        "ipConfigurations": [
          {
            "name": "[concat('ipconfig', '2')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('FW01PrivateIPAddressTrust')]",
              "subnet": {
                "id": "[variables(concat('subnet','2','Ref'))]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('TrustlbNameBackEnd')), '/backendAddressPools/', parameters('TrustlbNameBackEnd'), '-pool')]"
                }
              ]
            }
          }
        ]
      }

    },
    {
      "name": "PAN-VM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "storageAcountSetup1",
        "[concat('Microsoft.Network/networkInterfaces/', variables('VM01nicName'), '0')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('VM01nicName'), '1')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('VM01nicName'), '2')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "FWVM01Name": {
            "value": "[parameters('FWVM01Name')]"
          },
          "imageSku": {
            "value": "[parameters('imageSku')]"
          },
          "imageOffer": {
            "value": "[variables('imageOffer')]"
          },
          "imageVersion": {
            "value": "[parameters('imageVersion')]"
          },
          "imagePublisher": {
            "value": "[variables('imagePublisher')]"
          },
          "VM01nicName": {
            "value": "[variables('VM01nicName')]"
          },
           "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "adminUserName": {
            "value": "[parameters('adminUserName')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "newStorageAccount": {
            "value": "[parameters('newStorageAccount')]"
          },
          "availabilitySetName": {
            "value": "[parameters('availabilitySetName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[parameters('UntrustlbNameFrontEnd')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('UntrustLBpublicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]",
                "privateIPAllocationMethod": "Dynamic"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[concat(parameters('UntrustlbNameFrontEnd'), '-pool')]"
          }
        ],
        "inboundNatRules": [],
        "loadBalancingRules": [
          {
            "name": "[concat(parameters('UntrustlbNameFrontEnd'),'-httprule')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('UntrustlbNameFrontEnd')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('UntrustlbNameFrontEnd')), '/backendAddressPools/', parameters('UntrustlbNameFrontEnd'), '-pool')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('UntrustlbNameFrontEnd')), '/probes/', parameters('UntrustlbNameFrontEnd'),'-probe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "[concat(parameters('UntrustlbNameFrontEnd'), '-probe')]",
            "properties": {
              "protocol": "tcp",
              "port": 22,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[parameters('TrustlbNameBackEnd')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[variables('TrustlbsubnetRef')]"
              },
              "privateIPAddress": "[parameters('TrustlbFrontEndIPAddress')]",
              "privateIPAllocationMethod": "Static"
            },
            "name": "LoadBalancerFrontend"
          }
        ],
        "backendAddressPools": [
          {
            "name": "[concat(parameters('TrustlbNameBackEnd'), '-pool')]"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('TrustlbNameBackEnd')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('TrustlbNameBackEnd')), '/backendAddressPools/', parameters('TrustlbNameBackEnd'), '-pool')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('TrustlbNameBackEnd')), '/probes/', parameters('TrustlbNameBackEnd'),'-probe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "idleTimeoutInMinutes": 4,
              "enableFloatingIP": true,
              "loadDistribution": "SourceIP"
            },
            "Name": "[concat(parameters('TrustlbNameBackEnd'),'-httprule')]"
          },
          {
            "name": "[concat(parameters('TrustlbNameBackEnd'),'-httpsrule')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('TrustlbNameBackEnd')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "loadDistribution": "SourceIP",
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('TrustlbNameBackEnd')), '/backendAddressPools/', parameters('TrustlbNameBackEnd'), '-pool')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('TrustlbNameBackEnd')), '/probes/', parameters('TrustlbNameBackEnd'),'-probe')]"
              }
            }
          },
          {
            "name": "[concat(parameters('TrustlbNameBackEnd'),'-rul-ssh')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('TrustlbNameBackEnd')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "frontendPort": 22,
              "backendPort": 22,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "loadDistribution": "SourceIP",
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('TrustlbNameBackEnd')), '/backendAddressPools/', parameters('TrustlbNameBackEnd'), '-pool')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('TrustlbNameBackEnd')), '/probes/', parameters('TrustlbNameBackEnd'),'-probe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 22,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            },
            "name": "[concat(parameters('TrustlbNameBackEnd'), '-probe')]"
          }
        ]
      }
    }

  ]
}
